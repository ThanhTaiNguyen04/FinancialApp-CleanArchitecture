// <auto-generated />
using System;
using FinancialApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancialApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250926144331_FixSeedData")]
    partial class FixSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinancialApp.Domain.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BudgetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<decimal>("SpentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BudgetAmount = 2000000m,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Month = 9,
                            SpentAmount = 455789m,
                            UpdatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1,
                            Year = 2025
                        },
                        new
                        {
                            Id = 2,
                            BudgetAmount = 3500000m,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Month = 9,
                            SpentAmount = 3000000m,
                            UpdatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1,
                            Year = 2025
                        },
                        new
                        {
                            Id = 3,
                            BudgetAmount = 1000000m,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Month = 9,
                            SpentAmount = 243789m,
                            UpdatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1,
                            Year = 2025
                        });
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorCode = "#4CAF50",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            IconName = "salary",
                            IsActive = true,
                            Name = "Lương",
                            Type = "income"
                        },
                        new
                        {
                            Id = 2,
                            ColorCode = "#FF9800",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            IconName = "shopping",
                            IsActive = true,
                            Name = "Đi chợ",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 3,
                            ColorCode = "#2196F3",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            IconName = "home",
                            IsActive = true,
                            Name = "Thuê nhà",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 4,
                            ColorCode = "#F44336",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            IconName = "medical",
                            IsActive = true,
                            Name = "Y tế",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 5,
                            ColorCode = "#9C27B0",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            IconName = "travel",
                            IsActive = true,
                            Name = "Du lịch",
                            Type = "expense"
                        });
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsRecent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastTransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Phone")
                        .IsUnique();

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarUrl = "https://images.pexels.com/photos/733872/pexels-photo-733872.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "catherine@email.com",
                            FullName = "Catherine Johnson",
                            IsRecent = true,
                            Phone = "+1234567891",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvatarUrl = "https://images.pexels.com/photos/697509/pexels-photo-697509.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "allan@email.com",
                            FullName = "Allan Smith",
                            IsRecent = true,
                            Phone = "+1234567892",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvatarUrl = "https://images.pexels.com/photos/2748091/pexels-photo-2748091.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "kimberly@email.com",
                            FullName = "Kimberly Brown",
                            IsRecent = true,
                            Phone = "+1234567893",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.SavingGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TargetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SavingGoals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorCode = "#4CAF50",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            CurrentAmount = 2300000m,
                            Description = "Tiết kiệm cho việc học",
                            IconName = "education",
                            Name = "Giáo dục",
                            Status = "active",
                            TargetAmount = 5000000m,
                            TargetDate = new DateTime(2026, 3, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorCode = "#FF9800",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            CurrentAmount = 5600000m,
                            Description = "Tiết kiệm mua nhà",
                            IconName = "house",
                            Name = "Mua nhà",
                            Status = "active",
                            TargetAmount = 47000000m,
                            TargetDate = new DateTime(2027, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            ColorCode = "#2196F3",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            CurrentAmount = 800000m,
                            Description = "Chuyến du lịch Hàn Quốc",
                            IconName = "travel",
                            Name = "Du lịch",
                            Status = "active",
                            TargetAmount = 2200000m,
                            TargetDate = new DateTime(2026, 1, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId", "TransactionDate");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 16000000m,
                            Category = "Lương",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Lương tháng 9",
                            TransactionDate = new DateTime(2025, 9, 21, 10, 0, 0, 0, DateTimeKind.Utc),
                            Type = "income",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 455789m,
                            Category = "Đi chợ",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mua sắm hàng tuần",
                            TransactionDate = new DateTime(2025, 9, 23, 10, 0, 0, 0, DateTimeKind.Utc),
                            Type = "expense",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 3000000m,
                            Category = "Thuê nhà",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tiền thuê nhà tháng 9",
                            TransactionDate = new DateTime(2025, 9, 24, 10, 0, 0, 0, DateTimeKind.Utc),
                            Type = "expense",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 243789m,
                            Category = "Y tế",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Khám bệnh và thuốc",
                            TransactionDate = new DateTime(2025, 9, 25, 10, 0, 0, 0, DateTimeKind.Utc),
                            Type = "expense",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FromUserId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ToContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransferType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ToContactId");

                    b.HasIndex("FromUserId", "TransferDate");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AvailableBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableBalance = 5320.50m,
                            AvatarUrl = "https://images.pexels.com/photos/2167673/pexels-photo-2167673.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260",
                            CreatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "christopher.summers@email.com",
                            FullName = "Christopher Summers",
                            Phone = "+1234567890",
                            UpdatedAt = new DateTime(2025, 9, 26, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Budget", b =>
                {
                    b.HasOne("FinancialApp.Domain.Entities.Category", "Category")
                        .WithMany("Budgets")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialApp.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Contact", b =>
                {
                    b.HasOne("FinancialApp.Domain.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.SavingGoal", b =>
                {
                    b.HasOne("FinancialApp.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("FinancialApp.Domain.Entities.Category", null)
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId");

                    b.HasOne("FinancialApp.Domain.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Transfer", b =>
                {
                    b.HasOne("FinancialApp.Domain.Entities.User", "FromUser")
                        .WithMany("SentTransfers")
                        .HasForeignKey("FromUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinancialApp.Domain.Entities.Contact", "ToContact")
                        .WithMany("ReceivedTransfers")
                        .HasForeignKey("ToContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("ToContact");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.Contact", b =>
                {
                    b.Navigation("ReceivedTransfers");
                });

            modelBuilder.Entity("FinancialApp.Domain.Entities.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("SentTransfers");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
